<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security" 
    xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <!-- Spring Security Configuration Start -->
	<sec:global-method-security pre-post-annotations="enabled" />
	
	<sec:http pattern="/resultCallback.jsp" security="none"/>
	<sec:http pattern="/login/login.jsp" security="none"/>
	<sec:http pattern="/css/**" security="none"/>
	<sec:http pattern="/images/**" security="none"/>
	<sec:http pattern="/js/**" security="none"/>
	<sec:http pattern="/test/**" security="none"/>

    <sec:http auto-config="true" use-expressions="true">
		<sec:custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />

		<sec:session-management session-authentication-strategy-ref="sas" />

		<sec:http-basic />
		<sec:form-login login-processing-url="/doLogin" login-page="/login/login.jsp" 
						default-target-url="/home/login.do" authentication-failure-url="/login/login.jsp?auth=fail" />
		<sec:logout logout-url="/home/logout.do" />

		<sec:intercept-url pattern="/index.jsp" access="permitAll" />
		<sec:intercept-url pattern="/join/**" access="permitAll" />
		<sec:intercept-url pattern="/include/**" access="permitAll" />
		<sec:intercept-url pattern="/dwr/**" access="permitAll" />
		<sec:intercept-url pattern="/test/**" access="permitAll" />
		<sec:intercept-url pattern="/gaon/**" access="permitAll" />
		<sec:intercept-url pattern="/notice/**" access="permitAll" />
		<sec:intercept-url pattern="/common/**" access="permitAll" />

		<sec:intercept-url pattern="/user/isDuplication.do" access="isAnonymous()" />
		<sec:intercept-url pattern="/user/register.do" access="isAnonymous()" />
		
<!-- 		<sec:intercept-url pattern="/gaon/**" access="isAuthenticated()" /> -->
<!-- 		<sec:intercept-url pattern="/admin/FileUpload" access="hasRole('ROLE_ADMIN')" /> -->
<!-- 		<sec:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" /> -->
<!-- 		<sec:intercept-url pattern="/client/**" access="hasRole('ROLE_CLIENT')" /> -->
		
	</sec:http>
    
	<bean id="passwdEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder" />
	<bean id="memberUserDetailService" class="com.nuri.service.impl.UserServiceImpl">
		<property name="passwordEncoder" ref="passwdEncoder" />
	</bean>

	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider user-service-ref="memberUserDetailService">
			<sec:password-encoder ref="passwdEncoder"></sec:password-encoder>
		</sec:authentication-provider>
	</sec:authentication-manager>


	<!-- for Spring Security Custom Filter -->
	<bean id="springsecFilterChain" class="org.springframework.web.filter.DelegatingFilterProxy" />
	<bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />
	<bean id="securityContext"
		class="org.springframework.security.core.context.SecurityContextHolder"
		factory-method="getContext" />

	<bean id="authenticationProcessingFilterEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<constructor-arg name="loginFormUrl" value="/login/login.jsp" />
		<property name="forceHttps" value="false" />
	</bean>

	<bean id="concurrencyFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<!--constructor-arg name="expiredUrl" value="/expired.html" -->
	</bean>

	<bean id="myAuthFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<property name="sessionAuthenticationStrategy" ref="sas" />
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>

	<bean id="sas"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<property name="maximumSessions" value="1" />
		<property name="exceptionIfMaximumExceeded" value="true" />
	</bean>
	<!-- Spring Security Configuration End -->
</beans:beans>